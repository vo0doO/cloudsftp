/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
export class SliderSwatchComponent {
    constructor() {
        this.first = false;
        this.last = false;
        this.onClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        this.background = `hsl(${this.hsl.h}, 50%, ${this.offset * 100}%)`;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    handleClick($event) {
        this.onClick.emit({
            data: {
                h: this.hsl.h,
                s: 0.5,
                l: this.offset,
                source: 'hsl',
            },
            $event,
        });
    }
}
SliderSwatchComponent.decorators = [
    { type: Component, args: [{
                selector: 'color-slider-swatch',
                template: `
  <div class="slider-swatch" [style.background]="background"
    [class.first]="first" [class.last]="last" [class.active]="active"
    (click)="handleClick($event)"
  ></div>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                styles: [`
    .slider-swatch {
      height: 12px;
      background: rgb(121, 211, 166);
      cursor: pointer;
    }
    .slider-swatch.active {
      transform: scaleY(1.8);
      border-top-right-radius: 3.6px 2px;
      border-top-left-radius: 3.6px 2px;
      border-bottom-right-radius: 3.6px 2px;
      border-bottom-left-radius: 3.6px 2px;
    }
    .slider-swatch.first {
      border-radius: 2px 0px 0px 2px;
    }
    .slider-swatch.last {
      border-radius: 0px 2px 2px 0px;
    }

  `]
            }] }
];
SliderSwatchComponent.propDecorators = {
    hsl: [{ type: Input }],
    active: [{ type: Input }],
    offset: [{ type: Input }],
    first: [{ type: Input }],
    last: [{ type: Input }],
    onClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SliderSwatchComponent.prototype.hsl;
    /** @type {?} */
    SliderSwatchComponent.prototype.active;
    /** @type {?} */
    SliderSwatchComponent.prototype.offset;
    /** @type {?} */
    SliderSwatchComponent.prototype.first;
    /** @type {?} */
    SliderSwatchComponent.prototype.last;
    /** @type {?} */
    SliderSwatchComponent.prototype.onClick;
    /** @type {?} */
    SliderSwatchComponent.prototype.background;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLXN3YXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtY29sb3Ivc2xpZGVyLyIsInNvdXJjZXMiOlsic2xpZGVyLXN3YXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBRUwsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBc0N2QixNQUFNLE9BQU8scUJBQXFCO0lBbENsQztRQXNDVyxVQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ2QsU0FBSSxHQUFHLEtBQUssQ0FBQztRQUNaLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBaUI5QyxDQUFDOzs7O0lBZEMsV0FBVztRQUNULElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBVSxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDO0lBQ3JFLENBQUM7Ozs7O0lBQ0QsV0FBVyxDQUFDLE1BQU07UUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7WUFDaEIsSUFBSSxFQUFFO2dCQUNKLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2IsQ0FBQyxFQUFFLEdBQUc7Z0JBQ04sQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNO2dCQUNkLE1BQU0sRUFBRSxLQUFLO2FBQ2Q7WUFDRCxNQUFNO1NBQ1AsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBeERGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixRQUFRLEVBQUU7Ozs7O0dBS1Q7Z0JBd0JELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxtQkFBbUIsRUFBRSxLQUFLO3lCQXZCeEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBb0JEO2FBSUY7OztrQkFFRSxLQUFLO3FCQUNMLEtBQUs7cUJBQ0wsS0FBSztvQkFDTCxLQUFLO21CQUNMLEtBQUs7c0JBQ0wsTUFBTTs7OztJQUxQLG9DQUFrQjs7SUFDbEIsdUNBQXlCOztJQUN6Qix1Q0FBd0I7O0lBQ3hCLHNDQUF1Qjs7SUFDdkIscUNBQXNCOztJQUN0Qix3Q0FBNEM7O0lBQzVDLDJDQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgSFNMIH0gZnJvbSAnbmd4LWNvbG9yJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sb3Itc2xpZGVyLXN3YXRjaCcsXG4gIHRlbXBsYXRlOiBgXG4gIDxkaXYgY2xhc3M9XCJzbGlkZXItc3dhdGNoXCIgW3N0eWxlLmJhY2tncm91bmRdPVwiYmFja2dyb3VuZFwiXG4gICAgW2NsYXNzLmZpcnN0XT1cImZpcnN0XCIgW2NsYXNzLmxhc3RdPVwibGFzdFwiIFtjbGFzcy5hY3RpdmVdPVwiYWN0aXZlXCJcbiAgICAoY2xpY2spPVwiaGFuZGxlQ2xpY2soJGV2ZW50KVwiXG4gID48L2Rpdj5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgIC5zbGlkZXItc3dhdGNoIHtcbiAgICAgIGhlaWdodDogMTJweDtcbiAgICAgIGJhY2tncm91bmQ6IHJnYigxMjEsIDIxMSwgMTY2KTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLnNsaWRlci1zd2F0Y2guYWN0aXZlIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVZKDEuOCk7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMy42cHggMnB4O1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMy42cHggMnB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDMuNnB4IDJweDtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDMuNnB4IDJweDtcbiAgICB9XG4gICAgLnNsaWRlci1zd2F0Y2guZmlyc3Qge1xuICAgICAgYm9yZGVyLXJhZGl1czogMnB4IDBweCAwcHggMnB4O1xuICAgIH1cbiAgICAuc2xpZGVyLXN3YXRjaC5sYXN0IHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDBweCAycHggMnB4IDBweDtcbiAgICB9XG5cbiAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBTbGlkZXJTd2F0Y2hDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBoc2w6IEhTTDtcbiAgQElucHV0KCkgYWN0aXZlOiBib29sZWFuO1xuICBASW5wdXQoKSBvZmZzZXQ6IG51bWJlcjtcbiAgQElucHV0KCkgZmlyc3QgPSBmYWxzZTtcbiAgQElucHV0KCkgbGFzdCA9IGZhbHNlO1xuICBAT3V0cHV0KCkgb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBiYWNrZ3JvdW5kOiBzdHJpbmc7XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgdGhpcy5iYWNrZ3JvdW5kID0gYGhzbCgke3RoaXMuaHNsLmh9LCA1MCUsICR7dGhpcy5vZmZzZXQgKiAxMDB9JSlgO1xuICB9XG4gIGhhbmRsZUNsaWNrKCRldmVudCkge1xuICAgIHRoaXMub25DbGljay5lbWl0KHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgaDogdGhpcy5oc2wuaCxcbiAgICAgICAgczogMC41LFxuICAgICAgICBsOiB0aGlzLm9mZnNldCxcbiAgICAgICAgc291cmNlOiAnaHNsJyxcbiAgICAgIH0sXG4gICAgICAkZXZlbnQsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==