/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import { isValidHex } from 'ngx-color';
var PhotoshopFieldsComponent = /** @class */ (function () {
    function PhotoshopFieldsComponent() {
        this.onChange = new EventEmitter();
        this.RGBinput = {
            marginLeft: '35%',
            width: '40%',
            height: '22px',
            border: '1px solid rgb(136, 136, 136)',
            boxShadow: 'rgba(0, 0, 0, 0.1) 0px 1px 1px inset, rgb(236, 236, 236) 0px 1px 0px 0px',
            marginBottom: '2px',
            fontSize: '13px',
            paddingLeft: '3px',
            marginRight: '10px',
        };
        this.RGBwrap = {
            position: 'relative',
        };
        this.RGBlabel = {
            left: '0px',
            width: '34px',
            textTransform: 'uppercase',
            fontSize: '13px',
            height: '24px',
            lineHeight: '24px',
            position: 'absolute',
        };
        this.HEXinput = {
            marginLeft: '20%',
            width: '80%',
            height: '22px',
            border: '1px solid #888888',
            boxShadow: 'inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC',
            marginBottom: '3px',
            fontSize: '13px',
            paddingLeft: '3px',
        };
        this.HEXwrap = {
            position: 'relative',
        };
        this.HEXlabel = {
            position: 'absolute',
            top: '0px',
            left: '0px',
            width: '14px',
            textTransform: 'uppercase',
            fontSize: '13px',
            height: '24px',
            lineHeight: '24px',
        };
    }
    /**
     * @param {?} v
     * @return {?}
     */
    PhotoshopFieldsComponent.prototype.round = /**
     * @param {?} v
     * @return {?}
     */
    function (v) {
        return Math.round(v);
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    PhotoshopFieldsComponent.prototype.handleValueChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var data = _a.data, $event = _a.$event;
        if (data['#']) {
            if (isValidHex(data['#'])) {
                this.onChange.emit({
                    data: {
                        hex: data['#'],
                        source: 'hex',
                    },
                    $event: $event,
                });
            }
        }
        else if (data.r || data.g || data.b) {
            this.onChange.emit({
                data: {
                    r: data.r || this.rgb.r,
                    g: data.g || this.rgb.g,
                    b: data.b || this.rgb.b,
                    source: 'rgb',
                },
                $event: $event,
            });
        }
        else if (data.h || data.s || data.v) {
            this.onChange.emit({
                data: {
                    h: data.h || this.hsv.h,
                    s: data.s || this.hsv.s,
                    v: data.v || this.hsv.v,
                    source: 'hsv',
                },
                $event: $event,
            });
        }
    };
    PhotoshopFieldsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-photoshop-fields',
                    template: "\n  <div class=\"photoshop-fields\">\n    <color-editable-input\n      [value]=\"round(hsv.h)\"\n      label=\"h\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: RGBinput, wrap: RGBwrap, label: RGBlabel}\"\n    ></color-editable-input>\n    <color-editable-input\n      [value]=\"round(hsv.s * 100)\"\n      label=\"s\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: RGBinput, wrap: RGBwrap, label: RGBlabel}\"\n    ></color-editable-input>\n    <color-editable-input\n      [value]=\"round(hsv.v * 100)\"\n      label=\"v\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: RGBinput, wrap: RGBwrap, label: RGBlabel}\"\n    ></color-editable-input>\n    <div class=\"photoshop-divider\"></div>\n    <color-editable-input\n      [value]=\"rgb.r\"\n      label=\"r\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: RGBinput, wrap: RGBwrap, label: RGBlabel}\"\n    ></color-editable-input>\n    <color-editable-input\n      [value]=\"rgb.g\"\n      label=\"g\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: RGBinput, wrap: RGBwrap, label: RGBlabel}\"\n    ></color-editable-input>\n    <color-editable-input\n      [value]=\"rgb.b\"\n      label=\"b\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: RGBinput, wrap: RGBwrap, label: RGBlabel}\"\n    ></color-editable-input>\n    <div class=\"photoshop-divider\"></div>\n    <color-editable-input\n      [value]=\"hex.replace('#', '')\"\n      label=\"#\"\n      (onChange)=\"handleValueChange($event)\"\n      [style]=\"{input: HEXinput, wrap: HEXwrap, label: HEXlabel}\"\n    ></color-editable-input>\n    <div class=\"photoshop-field-symbols\">\n      <div class=\"photoshop-symbol\">\u00B0</div>\n      <div class=\"photoshop-symbol\">%</div>\n      <div class=\"photoshop-symbol\">%</div>\n    </div>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n    .photoshop-fields {\n      padding-top: 5px;\n      padding-bottom: 9px;\n      width: 85px;\n      position: relative;\n    }\n    .photoshop-field-symbols {\n      position: absolute;\n      top: 5px;\n      right: -7px;\n      font-size: 13px;\n    }\n    .photoshop-symbol {\n      height: 24px;\n      line-height: 24px;\n      padding-bottom: 7px;\n    }\n    .photoshop-divider {\n      height: 5px;\n    }\n  "]
                }] }
    ];
    PhotoshopFieldsComponent.propDecorators = {
        rgb: [{ type: Input }],
        hsv: [{ type: Input }],
        hex: [{ type: Input }],
        onChange: [{ type: Output }]
    };
    return PhotoshopFieldsComponent;
}());
export { PhotoshopFieldsComponent };
if (false) {
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.rgb;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.hsv;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.hex;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.onChange;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.RGBinput;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.RGBwrap;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.RGBlabel;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.HEXinput;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.HEXwrap;
    /** @type {?} */
    PhotoshopFieldsComponent.prototype.HEXlabel;
}
//# sourceMappingURL=data:application/json;base64,