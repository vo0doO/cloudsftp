{"version":3,"file":"ngx-color-github.js.map","sources":["ng://ngx-color/github/github-swatch.component.ts","ng://ngx-color/github/github.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'color-github-swatch',\n  template: `\n  <div class=\"github-swatch\">\n    <color-swatch\n      [color]=\"color\"\n      [style]=\"swatchStyle\"\n      (onClick)=\"handleClick($event)\"\n      (onHover)=\"onSwatchHover.emit($event)\"\n      class=\"swatch\"\n    ></color-swatch>\n    <div class=\"clear\"></div>\n  </div>\n  `,\n  styles: [\n    `\n    .github-swatch {\n      width: 25px;\n      height: 25px;\n      font-size: 0;\n    }\n    .github-swatch:hover {\n      position: relative;\n      z-index: 2;\n      outline: 2px solid #fff;\n      box-shadow: 0 0 5px 2px rgba(0,0,0,0.25);\n    }\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class GithubSwatchComponent {\n  @Input() color: string;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onSwatchHover = new EventEmitter<any>();\n  swatchStyle: { [key: string]: string };\n\n  constructor() {}\n\n  handleClick({ hex, $event }) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n} from '@angular/core';\n\nimport { ColorWrap, SwatchModule } from 'ngx-color';\nimport { isValidHex } from 'ngx-color';\nimport { GithubSwatchComponent } from './github-swatch.component';\n\n@Component({\n  selector: 'color-github',\n  template: `\n  <div class=\"github-picker {{ triangle }}-triangle {{ className }}\"\n    [style.width.px]=\"width\"\n  >\n    <div class=\"triangleShadow\"></div>\n    <div class=\"triangle\"></div>\n    <color-github-swatch *ngFor=\"let color of colors\"\n      [color]=\"color\"\n      (onClick)=\"handleBlockChange($event)\"\n      (onSwatchHover)=\"onSwatchHover.emit($event)\"\n    ></color-github-swatch>\n  </div>\n  `,\n  styles: [\n    `\n  .github-picker {\n    background: rgb(255, 255, 255);\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n    border-radius: 4px;\n    position: relative;\n    padding: 5px;\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n  }\n  .triangleShadow {\n    position: absolute;\n    border-width: 8px;\n    border-style: solid;\n    border-color: transparent transparent rgba(0, 0, 0, 0.15);\n    border-image: initial;\n  }\n  .triangle {\n    position: absolute;\n    border-width: 7px;\n    border-style: solid;\n    border-color: transparent transparent rgb(255, 255, 255);\n    border-image: initial;\n  }\n  .hide-triangle > .triangle {\n    display: none;\n  }\n  .hide-triangle > .triangleShadow {\n    display: none;\n  }\n  .top-left-triangle > .triangle {\n    top: -14px;\n    left: 10px;\n  }\n  .top-left-triangle > .triangleShadow {\n    top: -16px;\n    left: 9px;\n  }\n  .top-right-triangle > .triangle {\n    top: -14px;\n    right: 10px;\n  }\n  .top-right-triangle > .triangleShadow {\n    top: -16px;\n    right: 9px;\n  }\n  .bottom-right-triangle > .triangle {\n    top: 35px;\n    right: 10px;\n    transform: rotate(180deg);\n  }\n  .bottom-right-triangle > .triangleShadow {\n    top: 37px;\n    right: 9px;\n    transform: rotate(180deg);\n  }\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class GithubComponent extends ColorWrap {\n  /** Pixel value for picker width */\n  @Input() width: string | number = 212;\n  /** Color squares to display */\n  @Input() colors = [\n    '#B80000',\n    '#DB3E00',\n    '#FCCB00',\n    '#008B02',\n    '#006B76',\n    '#1273DE',\n    '#004DCF',\n    '#5300EB',\n    '#EB9694',\n    '#FAD0C3',\n    '#FEF3BD',\n    '#C1E1C5',\n    '#BEDADC',\n    '#C4DEF6',\n    '#BED3F3',\n    '#D4C4FB',\n  ];\n  @Input() triangle: 'hide' | 'top-left' | 'top-right' | 'bottom-right' = 'top-left';\n\n  constructor() {\n    super();\n  }\n\n  handleBlockChange({ hex, $event }) {\n    if (isValidHex(hex)) {\n      this.handleChange({ hex, source: 'hex' }, $event);\n    }\n  }\n  handleValueChange({ data, $event }) {\n    this.handleChange(data, $event);\n  }\n}\n\n@NgModule({\n  declarations: [GithubComponent, GithubSwatchComponent],\n  exports: [GithubComponent, GithubSwatchComponent],\n  imports: [CommonModule, SwatchModule],\n})\nexport class ColorGithubModule {}\n"],"names":[],"mappings":";;;;;;;;AAAA,MAwCa,qBAAqB;IAMhC;QAJU,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;QAClC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;KAGlC;;;;;IAEhB,WAAW,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;KACpC;;;YA1CF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE;;;;;;;;;;;GAWT;gBAgBD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;yBAfxB;;;;;;;;;;;;GAYD;aAIF;;;;;oBAEE,KAAK;sBACL,MAAM;4BACN,MAAM;;;;;;;AC3CT,MA2Fa,eAAgB,SAAQ,SAAS;IAwB5C;QACE,KAAK,EAAE,CAAC;;;;QAvBD,UAAK,GAAoB,GAAG,CAAC;;;;QAE7B,WAAM,GAAG;YAChB,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;YACT,SAAS;SACV,CAAC;QACO,aAAQ,GAAuD,UAAU,CAAC;KAIlF;;;;;IAED,iBAAiB,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE;QAC/B,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;SACnD;KACF;;;;;IACD,iBAAiB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KACjC;;;YAlHF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;;;;;;GAYT;gBA8DD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;yBA7DxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DD;aAIF;;;;;oBAGE,KAAK;qBAEL,KAAK;uBAkBL,KAAK;;MAqBK,iBAAiB;;;YAL7B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,eAAe,EAAE,qBAAqB,CAAC;gBACtD,OAAO,EAAE,CAAC,eAAe,EAAE,qBAAqB,CAAC;gBACjD,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;aACtC;;;;;;;;;;"}
