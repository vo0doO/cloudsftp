import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, NgModule } from '@angular/core';
import { __extends } from 'tslib';
import { CommonModule } from '@angular/common';
import { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var GithubSwatchComponent = /** @class */ (function () {
    function GithubSwatchComponent() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    GithubSwatchComponent.prototype.handleClick = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var hex = _a.hex, $event = _a.$event;
        this.onClick.emit({ hex: hex, $event: $event });
    };
    GithubSwatchComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-github-swatch',
                    template: "\n  <div class=\"github-swatch\">\n    <color-swatch\n      [color]=\"color\"\n      [style]=\"swatchStyle\"\n      (onClick)=\"handleClick($event)\"\n      (onHover)=\"onSwatchHover.emit($event)\"\n      class=\"swatch\"\n    ></color-swatch>\n    <div class=\"clear\"></div>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n    .github-swatch {\n      width: 25px;\n      height: 25px;\n      font-size: 0;\n    }\n    .github-swatch:hover {\n      position: relative;\n      z-index: 2;\n      outline: 2px solid #fff;\n      box-shadow: 0 0 5px 2px rgba(0,0,0,0.25);\n    }\n  "]
                }] }
    ];
    /** @nocollapse */
    GithubSwatchComponent.ctorParameters = function () { return []; };
    GithubSwatchComponent.propDecorators = {
        color: [{ type: Input }],
        onClick: [{ type: Output }],
        onSwatchHover: [{ type: Output }]
    };
    return GithubSwatchComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var GithubComponent = /** @class */ (function (_super) {
    __extends(GithubComponent, _super);
    function GithubComponent() {
        var _this = _super.call(this) || this;
        /**
         * Pixel value for picker width
         */
        _this.width = 212;
        /**
         * Color squares to display
         */
        _this.colors = [
            '#B80000',
            '#DB3E00',
            '#FCCB00',
            '#008B02',
            '#006B76',
            '#1273DE',
            '#004DCF',
            '#5300EB',
            '#EB9694',
            '#FAD0C3',
            '#FEF3BD',
            '#C1E1C5',
            '#BEDADC',
            '#C4DEF6',
            '#BED3F3',
            '#D4C4FB',
        ];
        _this.triangle = 'top-left';
        return _this;
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    GithubComponent.prototype.handleBlockChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            this.handleChange({ hex: hex, source: 'hex' }, $event);
        }
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    GithubComponent.prototype.handleValueChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    GithubComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-github',
                    template: "\n  <div class=\"github-picker {{ triangle }}-triangle {{ className }}\"\n    [style.width.px]=\"width\"\n  >\n    <div class=\"triangleShadow\"></div>\n    <div class=\"triangle\"></div>\n    <color-github-swatch *ngFor=\"let color of colors\"\n      [color]=\"color\"\n      (onClick)=\"handleBlockChange($event)\"\n      (onSwatchHover)=\"onSwatchHover.emit($event)\"\n    ></color-github-swatch>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n  .github-picker {\n    background: rgb(255, 255, 255);\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n    border-radius: 4px;\n    position: relative;\n    padding: 5px;\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n  }\n  .triangleShadow {\n    position: absolute;\n    border-width: 8px;\n    border-style: solid;\n    border-color: transparent transparent rgba(0, 0, 0, 0.15);\n    border-image: initial;\n  }\n  .triangle {\n    position: absolute;\n    border-width: 7px;\n    border-style: solid;\n    border-color: transparent transparent rgb(255, 255, 255);\n    border-image: initial;\n  }\n  .hide-triangle > .triangle {\n    display: none;\n  }\n  .hide-triangle > .triangleShadow {\n    display: none;\n  }\n  .top-left-triangle > .triangle {\n    top: -14px;\n    left: 10px;\n  }\n  .top-left-triangle > .triangleShadow {\n    top: -16px;\n    left: 9px;\n  }\n  .top-right-triangle > .triangle {\n    top: -14px;\n    right: 10px;\n  }\n  .top-right-triangle > .triangleShadow {\n    top: -16px;\n    right: 9px;\n  }\n  .bottom-right-triangle > .triangle {\n    top: 35px;\n    right: 10px;\n    transform: rotate(180deg);\n  }\n  .bottom-right-triangle > .triangleShadow {\n    top: 37px;\n    right: 9px;\n    transform: rotate(180deg);\n  }\n  "]
                }] }
    ];
    /** @nocollapse */
    GithubComponent.ctorParameters = function () { return []; };
    GithubComponent.propDecorators = {
        width: [{ type: Input }],
        colors: [{ type: Input }],
        triangle: [{ type: Input }]
    };
    return GithubComponent;
}(ColorWrap));
var ColorGithubModule = /** @class */ (function () {
    function ColorGithubModule() {
    }
    ColorGithubModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [GithubComponent, GithubSwatchComponent],
                    exports: [GithubComponent, GithubSwatchComponent],
                    imports: [CommonModule, SwatchModule],
                },] }
    ];
    return ColorGithubModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { GithubComponent, ColorGithubModule, GithubSwatchComponent as Éµa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,