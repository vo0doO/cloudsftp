!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("ngx-color")):"function"==typeof define&&define.amd?define("ngx-color/github",["exports","@angular/core","@angular/common","ngx-color"],t):t((n["ngx-color"]=n["ngx-color"]||{},n["ngx-color"].github={}),n.ng.core,n.ng.common,n["ngx-color"])}(this,function(n,e,t,r){"use strict";var i=function(n,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var e in t)t.hasOwnProperty(e)&&(n[e]=t[e])})(n,t)};var o=function(){function n(){this.onClick=new e.EventEmitter,this.onSwatchHover=new e.EventEmitter}return n.prototype.handleClick=function(n){var t=n.hex,e=n.$event;this.onClick.emit({hex:t,$event:e})},n.decorators=[{type:e.Component,args:[{selector:"color-github-swatch",template:'\n  <div class="github-swatch">\n    <color-swatch\n      [color]="color"\n      [style]="swatchStyle"\n      (onClick)="handleClick($event)"\n      (onHover)="onSwatchHover.emit($event)"\n      class="swatch"\n    ></color-swatch>\n    <div class="clear"></div>\n  </div>\n  ',changeDetection:e.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1,styles:["\n    .github-swatch {\n      width: 25px;\n      height: 25px;\n      font-size: 0;\n    }\n    .github-swatch:hover {\n      position: relative;\n      z-index: 2;\n      outline: 2px solid #fff;\n      box-shadow: 0 0 5px 2px rgba(0,0,0,0.25);\n    }\n  "]}]}],n.ctorParameters=function(){return[]},n.propDecorators={color:[{type:e.Input}],onClick:[{type:e.Output}],onSwatchHover:[{type:e.Output}]},n}(),a=function(t){function n(){var n=t.call(this)||this;return n.width=212,n.colors=["#B80000","#DB3E00","#FCCB00","#008B02","#006B76","#1273DE","#004DCF","#5300EB","#EB9694","#FAD0C3","#FEF3BD","#C1E1C5","#BEDADC","#C4DEF6","#BED3F3","#D4C4FB"],n.triangle="top-left",n}return function o(n,t){function e(){this.constructor=n}i(n,t),n.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}(n,t),n.prototype.handleBlockChange=function(n){var t=n.hex,e=n.$event;r.isValidHex(t)&&this.handleChange({hex:t,source:"hex"},e)},n.prototype.handleValueChange=function(n){var t=n.data,e=n.$event;this.handleChange(t,e)},n.decorators=[{type:e.Component,args:[{selector:"color-github",template:'\n  <div class="github-picker {{ triangle }}-triangle {{ className }}"\n    [style.width.px]="width"\n  >\n    <div class="triangleShadow"></div>\n    <div class="triangle"></div>\n    <color-github-swatch *ngFor="let color of colors"\n      [color]="color"\n      (onClick)="handleBlockChange($event)"\n      (onSwatchHover)="onSwatchHover.emit($event)"\n    ></color-github-swatch>\n  </div>\n  ',changeDetection:e.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1,styles:["\n  .github-picker {\n    background: rgb(255, 255, 255);\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n    border-radius: 4px;\n    position: relative;\n    padding: 5px;\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n  }\n  .triangleShadow {\n    position: absolute;\n    border-width: 8px;\n    border-style: solid;\n    border-color: transparent transparent rgba(0, 0, 0, 0.15);\n    border-image: initial;\n  }\n  .triangle {\n    position: absolute;\n    border-width: 7px;\n    border-style: solid;\n    border-color: transparent transparent rgb(255, 255, 255);\n    border-image: initial;\n  }\n  .hide-triangle > .triangle {\n    display: none;\n  }\n  .hide-triangle > .triangleShadow {\n    display: none;\n  }\n  .top-left-triangle > .triangle {\n    top: -14px;\n    left: 10px;\n  }\n  .top-left-triangle > .triangleShadow {\n    top: -16px;\n    left: 9px;\n  }\n  .top-right-triangle > .triangle {\n    top: -14px;\n    right: 10px;\n  }\n  .top-right-triangle > .triangleShadow {\n    top: -16px;\n    right: 9px;\n  }\n  .bottom-right-triangle > .triangle {\n    top: 35px;\n    right: 10px;\n    transform: rotate(180deg);\n  }\n  .bottom-right-triangle > .triangleShadow {\n    top: 37px;\n    right: 9px;\n    transform: rotate(180deg);\n  }\n  "]}]}],n.ctorParameters=function(){return[]},n.propDecorators={width:[{type:e.Input}],colors:[{type:e.Input}],triangle:[{type:e.Input}]},n}(r.ColorWrap),l=function(){function n(){}return n.decorators=[{type:e.NgModule,args:[{declarations:[a,o],exports:[a,o],imports:[t.CommonModule,r.SwatchModule]}]}],n}();n.GithubComponent=a,n.ColorGithubModule=l,n.Éµa=o,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-color-github.umd.min.js.map