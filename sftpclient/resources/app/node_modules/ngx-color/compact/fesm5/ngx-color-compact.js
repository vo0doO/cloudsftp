import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, NgModule } from '@angular/core';
import { getContrastingColor, isValidHex, ColorWrap, EditableInputModule, RaisedModule, SwatchModule } from 'ngx-color';
import { __extends } from 'tslib';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var CompactColorComponent = /** @class */ (function () {
    function CompactColorComponent() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
        this.swatchStyle = {
            width: '15px',
            height: '15px',
            float: 'left',
            marginRight: '5px',
            marginBottom: '5px',
            position: 'relative',
            cursor: 'pointer',
        };
        this.swatchFocus = {};
        this.getContrastingColor = getContrastingColor;
    }
    /**
     * @return {?}
     */
    CompactColorComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.swatchStyle.background = this.color;
        this.swatchFocus.boxShadow = "0 0 4px " + this.color;
        if (this.color.toLowerCase() === '#ffffff') {
            this.swatchStyle.boxShadow = 'inset 0 0 0 1px #ddd';
        }
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    CompactColorComponent.prototype.handleClick = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var hex = _a.hex, $event = _a.$event;
        this.onClick.emit({ hex: hex, $event: $event });
    };
    CompactColorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-compact-color',
                    template: "\n  <div class=\"compact-color\">\n    <color-swatch class=\"swatch\"\n      [color]=\"color\" [style]=\"swatchStyle\"\n      [focusStyle]=\"swatchFocus\"\n      (onClick)=\"handleClick($event)\" (onHover)=\"onSwatchHover.emit($event)\"\n      >\n      <div class=\"compact-dot\"\n        [class.active]=\"active\" [style.background]=\"getContrastingColor(color)\"\n      ></div>\n    </color-swatch>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n  .compact-dot {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    bottom: 5px;\n    left: 5px;\n    border-radius: 50%;\n    opacity: 0;\n  }\n  .compact-dot.active {\n    opacity: 1;\n  }\n  "]
                }] }
    ];
    CompactColorComponent.propDecorators = {
        color: [{ type: Input }],
        active: [{ type: Input }],
        onClick: [{ type: Output }],
        onSwatchHover: [{ type: Output }]
    };
    return CompactColorComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var CompactFieldsComponent = /** @class */ (function () {
    function CompactFieldsComponent() {
        this.onChange = new EventEmitter();
        this.HEXWrap = {
            marginTop: '-3px',
            marginBottom: '-3px',
            // flex: '6 1 0%',
            position: 'relative',
        };
        this.HEXinput = {
            width: '80%',
            padding: '0px',
            paddingLeft: '20%',
            border: 'none',
            outline: 'none',
            background: 'none',
            fontSize: '12px',
            color: '#333',
            height: '16px',
        };
        this.HEXlabel = {
            display: 'none',
        };
        this.RGBwrap = {
            marginTop: '-3px',
            marginBottom: '-3px',
            // flex: '3 1 0%',
            position: 'relative',
        };
        this.RGBinput = {
            width: '80%',
            padding: '0px',
            paddingLeft: '30%',
            border: 'none',
            outline: 'none',
            background: 'none',
            fontSize: '12px',
            color: '#333',
            height: '16px',
        };
        this.RGBlabel = {
            position: 'absolute',
            top: '6px',
            left: '0px',
            'line-height': '16px',
            'text-transform': 'uppercase',
            fontSize: '12px',
            color: '#999',
        };
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    CompactFieldsComponent.prototype.handleChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var data = _a.data, $event = _a.$event;
        if (data.hex) {
            if (isValidHex(data.hex)) {
                this.onChange.emit({
                    data: {
                        hex: data.hex,
                        source: 'hex',
                    },
                    $event: $event,
                });
            }
        }
        else {
            this.onChange.emit({
                data: {
                    r: data.r || this.rgb.r,
                    g: data.g || this.rgb.g,
                    b: data.b || this.rgb.b,
                    source: 'rgb',
                },
                $event: $event,
            });
        }
    };
    CompactFieldsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-compact-fields',
                    template: "\n  <div class=\"compact-fields\">\n    <div class=\"compact-active\" [style.background]=\"hex\"></div>\n    <color-editable-input\n      style=\"flex: 6 1 0%;\"\n      [style]=\"{ wrap: HEXWrap, input: HEXinput, label: HEXlabel }\"\n      label=\"hex\"\n      [value]=\"hex\"\n      (onChange)=\"handleChange($event)\"\n    ></color-editable-input>\n    <color-editable-input\n      style=\"flex: 3 1 0%\"\n      [style]=\"{ wrap: RGBwrap, input: RGBinput, label: RGBlabel }\"\n      label=\"r\"\n      [value]=\"rgb.r\"\n      (onChange)=\"handleChange($event)\"\n    ></color-editable-input>\n    <color-editable-input\n      style=\"flex: 3 1 0%\"\n      [style]=\"{ wrap: RGBwrap, input: RGBinput, label: RGBlabel }\"\n      label=\"g\"\n      [value]=\"rgb.g\"\n      (onChange)=\"handleChange($event)\"\n    ></color-editable-input>\n    <color-editable-input\n      style=\"flex: 3 1 0%\"\n      [style]=\"{ wrap: RGBwrap, input: RGBinput, label: RGBlabel }\"\n      label=\"b\"\n      [value]=\"rgb.b\"\n      (onChange)=\"handleChange($event)\"\n    ></color-editable-input>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n  .compact-fields {\n    display: flex;\n    padding-bottom: 6px;\n    padding-right: 5px;\n    position: relative;\n  }\n  .compact-active {\n    position: absolute;\n    top: 6px;\n    left: 5px;\n    height: 9px;\n    width: 9px;\n  }\n  "]
                }] }
    ];
    CompactFieldsComponent.propDecorators = {
        hex: [{ type: Input }],
        rgb: [{ type: Input }],
        onChange: [{ type: Output }]
    };
    return CompactFieldsComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var CompactComponent = /** @class */ (function (_super) {
    __extends(CompactComponent, _super);
    function CompactComponent() {
        var _this = _super.call(this) || this;
        /**
         * Color squares to display
         */
        _this.colors = [
            '#4D4D4D',
            '#999999',
            '#FFFFFF',
            '#F44E3B',
            '#FE9200',
            '#FCDC00',
            '#DBDF00',
            '#A4DD00',
            '#68CCCA',
            '#73D8FF',
            '#AEA1FF',
            '#FDA1FF',
            '#333333',
            '#808080',
            '#cccccc',
            '#D33115',
            '#E27300',
            '#FCC400',
            '#B0BC00',
            '#68BC00',
            '#16A5A5',
            '#009CE0',
            '#7B64FF',
            '#FA28FF',
            '#000000',
            '#666666',
            '#B3B3B3',
            '#9F0500',
            '#C45100',
            '#FB9E00',
            '#808900',
            '#194D33',
            '#0C797D',
            '#0062B1',
            '#653294',
            '#AB149E',
        ];
        return _this;
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    CompactComponent.prototype.handleBlockChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            this.handleChange({ hex: hex, source: 'hex' }, $event);
        }
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    CompactComponent.prototype.handleValueChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    CompactComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-compact',
                    template: "\n  <color-raised class=\"color-compact\">\n    <div class=\"compact-picker {{ className }}\">\n      <div>\n        <color-compact-color\n          *ngFor=\"let color of colors\" [color]=\"color\"\n          [active]=\"color.toLowerCase() === hex.toLowerCase()\"\n          (onClick)=\"handleBlockChange($event)\"\n        ></color-compact-color>\n        <div class=\"compact-clear\"></div>\n      </div>\n      <color-compact-fields\n        [hex]=\"hex\"\n        [rgb]=\"rgb\"\n        (onChange)=\"handleValueChange($event)\"\n      ></color-compact-fields>\n    </div>\n  </color-raised>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n    .color-compact {\n      background: #f6f6f6;\n      radius: 4px;\n    }\n    .compact-picker {\n      padding-top: 5px;\n      padding-left: 5px;\n      box-sizing: border-box;\n      width: 245px;\n    }\n    .compact-clear {\n      clear: both;\n    }\n  "]
                }] }
    ];
    /** @nocollapse */
    CompactComponent.ctorParameters = function () { return []; };
    CompactComponent.propDecorators = {
        colors: [{ type: Input }]
    };
    return CompactComponent;
}(ColorWrap));
var ColorCompactModule = /** @class */ (function () {
    function ColorCompactModule() {
    }
    ColorCompactModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        CompactComponent,
                        CompactColorComponent,
                        CompactFieldsComponent,
                    ],
                    exports: [CompactComponent, CompactColorComponent, CompactFieldsComponent],
                    imports: [CommonModule, EditableInputModule, SwatchModule, RaisedModule],
                },] }
    ];
    return ColorCompactModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { CompactComponent, ColorCompactModule, CompactColorComponent as ɵa, CompactFieldsComponent as ɵb };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWNvbG9yLWNvbXBhY3QuanMubWFwIiwic291cmNlcyI6WyJuZzovL25neC1jb2xvci9jb21wYWN0L2NvbXBhY3QtY29sb3IuY29tcG9uZW50LnRzIiwibmc6Ly9uZ3gtY29sb3IvY29tcGFjdC9jb21wYWN0LWZpZWxkcy5jb21wb25lbnQudHMiLCJuZzovL25neC1jb2xvci9jb21wYWN0L2NvbXBhY3QuY29tcG9uZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgZ2V0Q29udHJhc3RpbmdDb2xvciB9IGZyb20gJ25neC1jb2xvcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbG9yLWNvbXBhY3QtY29sb3InLFxuICB0ZW1wbGF0ZTogYFxuICA8ZGl2IGNsYXNzPVwiY29tcGFjdC1jb2xvclwiPlxuICAgIDxjb2xvci1zd2F0Y2ggY2xhc3M9XCJzd2F0Y2hcIlxuICAgICAgW2NvbG9yXT1cImNvbG9yXCIgW3N0eWxlXT1cInN3YXRjaFN0eWxlXCJcbiAgICAgIFtmb2N1c1N0eWxlXT1cInN3YXRjaEZvY3VzXCJcbiAgICAgIChvbkNsaWNrKT1cImhhbmRsZUNsaWNrKCRldmVudClcIiAob25Ib3Zlcik9XCJvblN3YXRjaEhvdmVyLmVtaXQoJGV2ZW50KVwiXG4gICAgICA+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29tcGFjdC1kb3RcIlxuICAgICAgICBbY2xhc3MuYWN0aXZlXT1cImFjdGl2ZVwiIFtzdHlsZS5iYWNrZ3JvdW5kXT1cImdldENvbnRyYXN0aW5nQ29sb3IoY29sb3IpXCJcbiAgICAgID48L2Rpdj5cbiAgICA8L2NvbG9yLXN3YXRjaD5cbiAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgLmNvbXBhY3QtZG90IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1cHg7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBib3R0b206IDVweDtcbiAgICBsZWZ0OiA1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgLmNvbXBhY3QtZG90LmFjdGl2ZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICBgLFxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIENvbXBhY3RDb2xvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGNvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFjdGl2ZTogYm9vbGVhbjtcbiAgQE91dHB1dCgpIG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIG9uU3dhdGNoSG92ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgc3dhdGNoU3R5bGU6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0gPSB7XG4gICAgd2lkdGg6ICcxNXB4JyxcbiAgICBoZWlnaHQ6ICcxNXB4JyxcbiAgICBmbG9hdDogJ2xlZnQnLFxuICAgIG1hcmdpblJpZ2h0OiAnNXB4JyxcbiAgICBtYXJnaW5Cb3R0b206ICc1cHgnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICB9O1xuICBzd2F0Y2hGb2N1czogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9O1xuICBnZXRDb250cmFzdGluZ0NvbG9yID0gZ2V0Q29udHJhc3RpbmdDb2xvcjtcblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLnN3YXRjaFN0eWxlLmJhY2tncm91bmQgPSB0aGlzLmNvbG9yO1xuICAgIHRoaXMuc3dhdGNoRm9jdXMuYm94U2hhZG93ID0gYDAgMCA0cHggJHt0aGlzLmNvbG9yfWA7XG4gICAgaWYgKHRoaXMuY29sb3IudG9Mb3dlckNhc2UoKSA9PT0gJyNmZmZmZmYnKSB7XG4gICAgICB0aGlzLnN3YXRjaFN0eWxlLmJveFNoYWRvdyA9ICdpbnNldCAwIDAgMCAxcHggI2RkZCc7XG4gICAgfVxuICB9XG4gIGhhbmRsZUNsaWNrKHsgaGV4LCAkZXZlbnQgfSkge1xuICAgIHRoaXMub25DbGljay5lbWl0KHsgaGV4LCAkZXZlbnQgfSk7XG4gIH1cbn1cbiIsImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzVmFsaWRIZXgsIFJHQkEgfSBmcm9tICduZ3gtY29sb3InO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb2xvci1jb21wYWN0LWZpZWxkcycsXG4gIHRlbXBsYXRlOiBgXG4gIDxkaXYgY2xhc3M9XCJjb21wYWN0LWZpZWxkc1wiPlxuICAgIDxkaXYgY2xhc3M9XCJjb21wYWN0LWFjdGl2ZVwiIFtzdHlsZS5iYWNrZ3JvdW5kXT1cImhleFwiPjwvZGl2PlxuICAgIDxjb2xvci1lZGl0YWJsZS1pbnB1dFxuICAgICAgc3R5bGU9XCJmbGV4OiA2IDEgMCU7XCJcbiAgICAgIFtzdHlsZV09XCJ7IHdyYXA6IEhFWFdyYXAsIGlucHV0OiBIRVhpbnB1dCwgbGFiZWw6IEhFWGxhYmVsIH1cIlxuICAgICAgbGFiZWw9XCJoZXhcIlxuICAgICAgW3ZhbHVlXT1cImhleFwiXG4gICAgICAob25DaGFuZ2UpPVwiaGFuZGxlQ2hhbmdlKCRldmVudClcIlxuICAgID48L2NvbG9yLWVkaXRhYmxlLWlucHV0PlxuICAgIDxjb2xvci1lZGl0YWJsZS1pbnB1dFxuICAgICAgc3R5bGU9XCJmbGV4OiAzIDEgMCVcIlxuICAgICAgW3N0eWxlXT1cInsgd3JhcDogUkdCd3JhcCwgaW5wdXQ6IFJHQmlucHV0LCBsYWJlbDogUkdCbGFiZWwgfVwiXG4gICAgICBsYWJlbD1cInJcIlxuICAgICAgW3ZhbHVlXT1cInJnYi5yXCJcbiAgICAgIChvbkNoYW5nZSk9XCJoYW5kbGVDaGFuZ2UoJGV2ZW50KVwiXG4gICAgPjwvY29sb3ItZWRpdGFibGUtaW5wdXQ+XG4gICAgPGNvbG9yLWVkaXRhYmxlLWlucHV0XG4gICAgICBzdHlsZT1cImZsZXg6IDMgMSAwJVwiXG4gICAgICBbc3R5bGVdPVwieyB3cmFwOiBSR0J3cmFwLCBpbnB1dDogUkdCaW5wdXQsIGxhYmVsOiBSR0JsYWJlbCB9XCJcbiAgICAgIGxhYmVsPVwiZ1wiXG4gICAgICBbdmFsdWVdPVwicmdiLmdcIlxuICAgICAgKG9uQ2hhbmdlKT1cImhhbmRsZUNoYW5nZSgkZXZlbnQpXCJcbiAgICA+PC9jb2xvci1lZGl0YWJsZS1pbnB1dD5cbiAgICA8Y29sb3ItZWRpdGFibGUtaW5wdXRcbiAgICAgIHN0eWxlPVwiZmxleDogMyAxIDAlXCJcbiAgICAgIFtzdHlsZV09XCJ7IHdyYXA6IFJHQndyYXAsIGlucHV0OiBSR0JpbnB1dCwgbGFiZWw6IFJHQmxhYmVsIH1cIlxuICAgICAgbGFiZWw9XCJiXCJcbiAgICAgIFt2YWx1ZV09XCJyZ2IuYlwiXG4gICAgICAob25DaGFuZ2UpPVwiaGFuZGxlQ2hhbmdlKCRldmVudClcIlxuICAgID48L2NvbG9yLWVkaXRhYmxlLWlucHV0PlxuICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAuY29tcGFjdC1maWVsZHMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1ib3R0b206IDZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5jb21wYWN0LWFjdGl2ZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNnB4O1xuICAgIGxlZnQ6IDVweDtcbiAgICBoZWlnaHQ6IDlweDtcbiAgICB3aWR0aDogOXB4O1xuICB9XG4gIGAsXG4gIF0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgQ29tcGFjdEZpZWxkc0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGhleDogc3RyaW5nO1xuICBASW5wdXQoKSByZ2I6IFJHQkE7XG4gIEBPdXRwdXQoKSBvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBIRVhXcmFwOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSA9IHtcbiAgICBtYXJnaW5Ub3A6ICctM3B4JyxcbiAgICBtYXJnaW5Cb3R0b206ICctM3B4JyxcbiAgICAvLyBmbGV4OiAnNiAxIDAlJyxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgfTtcbiAgSEVYaW5wdXQ6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge1xuICAgIHdpZHRoOiAnODAlJyxcbiAgICBwYWRkaW5nOiAnMHB4JyxcbiAgICBwYWRkaW5nTGVmdDogJzIwJScsXG4gICAgYm9yZGVyOiAnbm9uZScsXG4gICAgb3V0bGluZTogJ25vbmUnLFxuICAgIGJhY2tncm91bmQ6ICdub25lJyxcbiAgICBmb250U2l6ZTogJzEycHgnLFxuICAgIGNvbG9yOiAnIzMzMycsXG4gICAgaGVpZ2h0OiAnMTZweCcsXG4gIH07XG4gIEhFWGxhYmVsOiB7W2tleTogc3RyaW5nXTogc3RyaW5nfSA9IHtcbiAgICBkaXNwbGF5OiAnbm9uZScsXG4gIH07XG4gIFJHQndyYXA6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge1xuICAgIG1hcmdpblRvcDogJy0zcHgnLFxuICAgIG1hcmdpbkJvdHRvbTogJy0zcHgnLFxuICAgIC8vIGZsZXg6ICczIDEgMCUnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICB9O1xuICBSR0JpbnB1dDoge1trZXk6IHN0cmluZ106IHN0cmluZ30gPSB7XG4gICAgd2lkdGg6ICc4MCUnLFxuICAgIHBhZGRpbmc6ICcwcHgnLFxuICAgIHBhZGRpbmdMZWZ0OiAnMzAlJyxcbiAgICBib3JkZXI6ICdub25lJyxcbiAgICBvdXRsaW5lOiAnbm9uZScsXG4gICAgYmFja2dyb3VuZDogJ25vbmUnLFxuICAgIGZvbnRTaXplOiAnMTJweCcsXG4gICAgY29sb3I6ICcjMzMzJyxcbiAgICBoZWlnaHQ6ICcxNnB4JyxcbiAgfTtcbiAgUkdCbGFiZWw6IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9ID0ge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogJzZweCcsXG4gICAgbGVmdDogJzBweCcsXG4gICAgJ2xpbmUtaGVpZ2h0JzogJzE2cHgnLFxuICAgICd0ZXh0LXRyYW5zZm9ybSc6ICd1cHBlcmNhc2UnLFxuICAgIGZvbnRTaXplOiAnMTJweCcsXG4gICAgY29sb3I6ICcjOTk5JyxcbiAgfTtcblxuICBoYW5kbGVDaGFuZ2UoeyBkYXRhLCAkZXZlbnQgfSkge1xuICAgIGlmIChkYXRhLmhleCkge1xuICAgICAgaWYgKGlzVmFsaWRIZXgoZGF0YS5oZXgpKSB7XG4gICAgICAgIHRoaXMub25DaGFuZ2UuZW1pdCh7XG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgaGV4OiBkYXRhLmhleCxcbiAgICAgICAgICAgIHNvdXJjZTogJ2hleCcsXG4gICAgICAgICAgfSxcbiAgICAgICAgICAkZXZlbnQsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9uQ2hhbmdlLmVtaXQoe1xuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgcjogZGF0YS5yIHx8IHRoaXMucmdiLnIsXG4gICAgICAgICAgZzogZGF0YS5nIHx8IHRoaXMucmdiLmcsXG4gICAgICAgICAgYjogZGF0YS5iIHx8IHRoaXMucmdiLmIsXG4gICAgICAgICAgc291cmNlOiAncmdiJyxcbiAgICAgICAgfSxcbiAgICAgICAgJGV2ZW50LFxuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtcbiAgQ29sb3JXcmFwLFxuICBFZGl0YWJsZUlucHV0TW9kdWxlLFxuICBSYWlzZWRNb2R1bGUsXG4gIFN3YXRjaE1vZHVsZSxcbn0gZnJvbSAnbmd4LWNvbG9yJztcbmltcG9ydCB7IGlzVmFsaWRIZXggfSBmcm9tICduZ3gtY29sb3InO1xuaW1wb3J0IHsgQ29tcGFjdENvbG9yQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wYWN0LWNvbG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21wYWN0RmllbGRzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wYWN0LWZpZWxkcy5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb2xvci1jb21wYWN0JyxcbiAgdGVtcGxhdGU6IGBcbiAgPGNvbG9yLXJhaXNlZCBjbGFzcz1cImNvbG9yLWNvbXBhY3RcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY29tcGFjdC1waWNrZXIge3sgY2xhc3NOYW1lIH19XCI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8Y29sb3ItY29tcGFjdC1jb2xvclxuICAgICAgICAgICpuZ0Zvcj1cImxldCBjb2xvciBvZiBjb2xvcnNcIiBbY29sb3JdPVwiY29sb3JcIlxuICAgICAgICAgIFthY3RpdmVdPVwiY29sb3IudG9Mb3dlckNhc2UoKSA9PT0gaGV4LnRvTG93ZXJDYXNlKClcIlxuICAgICAgICAgIChvbkNsaWNrKT1cImhhbmRsZUJsb2NrQ2hhbmdlKCRldmVudClcIlxuICAgICAgICA+PC9jb2xvci1jb21wYWN0LWNvbG9yPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29tcGFjdC1jbGVhclwiPjwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8Y29sb3ItY29tcGFjdC1maWVsZHNcbiAgICAgICAgW2hleF09XCJoZXhcIlxuICAgICAgICBbcmdiXT1cInJnYlwiXG4gICAgICAgIChvbkNoYW5nZSk9XCJoYW5kbGVWYWx1ZUNoYW5nZSgkZXZlbnQpXCJcbiAgICAgID48L2NvbG9yLWNvbXBhY3QtZmllbGRzPlxuICAgIDwvZGl2PlxuICA8L2NvbG9yLXJhaXNlZD5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgIC5jb2xvci1jb21wYWN0IHtcbiAgICAgIGJhY2tncm91bmQ6ICNmNmY2ZjY7XG4gICAgICByYWRpdXM6IDRweDtcbiAgICB9XG4gICAgLmNvbXBhY3QtcGlja2VyIHtcbiAgICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB3aWR0aDogMjQ1cHg7XG4gICAgfVxuICAgIC5jb21wYWN0LWNsZWFyIHtcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBDb21wYWN0Q29tcG9uZW50IGV4dGVuZHMgQ29sb3JXcmFwIHtcbiAgLyoqIENvbG9yIHNxdWFyZXMgdG8gZGlzcGxheSAqL1xuICBASW5wdXQoKSBjb2xvcnMgPSBbXG4gICAgJyM0RDRENEQnLFxuICAgICcjOTk5OTk5JyxcbiAgICAnI0ZGRkZGRicsXG4gICAgJyNGNDRFM0InLFxuICAgICcjRkU5MjAwJyxcbiAgICAnI0ZDREMwMCcsXG4gICAgJyNEQkRGMDAnLFxuICAgICcjQTRERDAwJyxcbiAgICAnIzY4Q0NDQScsXG4gICAgJyM3M0Q4RkYnLFxuICAgICcjQUVBMUZGJyxcbiAgICAnI0ZEQTFGRicsXG4gICAgJyMzMzMzMzMnLFxuICAgICcjODA4MDgwJyxcbiAgICAnI2NjY2NjYycsXG4gICAgJyNEMzMxMTUnLFxuICAgICcjRTI3MzAwJyxcbiAgICAnI0ZDQzQwMCcsXG4gICAgJyNCMEJDMDAnLFxuICAgICcjNjhCQzAwJyxcbiAgICAnIzE2QTVBNScsXG4gICAgJyMwMDlDRTAnLFxuICAgICcjN0I2NEZGJyxcbiAgICAnI0ZBMjhGRicsXG4gICAgJyMwMDAwMDAnLFxuICAgICcjNjY2NjY2JyxcbiAgICAnI0IzQjNCMycsXG4gICAgJyM5RjA1MDAnLFxuICAgICcjQzQ1MTAwJyxcbiAgICAnI0ZCOUUwMCcsXG4gICAgJyM4MDg5MDAnLFxuICAgICcjMTk0RDMzJyxcbiAgICAnIzBDNzk3RCcsXG4gICAgJyMwMDYyQjEnLFxuICAgICcjNjUzMjk0JyxcbiAgICAnI0FCMTQ5RScsXG4gIF07XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuICBoYW5kbGVCbG9ja0NoYW5nZSh7IGhleCwgJGV2ZW50IH0pIHtcbiAgICBpZiAoaXNWYWxpZEhleChoZXgpKSB7XG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZSh7IGhleCwgc291cmNlOiAnaGV4JyB9LCAkZXZlbnQpO1xuICAgIH1cbiAgfVxuICBoYW5kbGVWYWx1ZUNoYW5nZSh7IGRhdGEsICRldmVudCB9KSB7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UoZGF0YSwgJGV2ZW50KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBDb21wYWN0Q29tcG9uZW50LFxuICAgIENvbXBhY3RDb2xvckNvbXBvbmVudCxcbiAgICBDb21wYWN0RmllbGRzQ29tcG9uZW50LFxuICBdLFxuICBleHBvcnRzOiBbQ29tcGFjdENvbXBvbmVudCwgQ29tcGFjdENvbG9yQ29tcG9uZW50LCBDb21wYWN0RmllbGRzQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRWRpdGFibGVJbnB1dE1vZHVsZSwgU3dhdGNoTW9kdWxlLCBSYWlzZWRNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBDb2xvckNvbXBhY3RNb2R1bGUge31cbiJdLCJuYW1lcyI6WyJ0c2xpYl8xLl9fZXh0ZW5kcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7SUFXQTtRQXFDWSxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNsQyxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDbEQsZ0JBQVcsR0FBOEI7WUFDdkMsS0FBSyxFQUFFLE1BQU07WUFDYixNQUFNLEVBQUUsTUFBTTtZQUNkLEtBQUssRUFBRSxNQUFNO1lBQ2IsV0FBVyxFQUFFLEtBQUs7WUFDbEIsWUFBWSxFQUFFLEtBQUs7WUFDbkIsUUFBUSxFQUFFLFVBQVU7WUFDcEIsTUFBTSxFQUFFLFNBQVM7U0FDbEIsQ0FBQztRQUNGLGdCQUFXLEdBQThCLEVBQUUsQ0FBQztRQUM1Qyx3QkFBbUIsR0FBRyxtQkFBbUIsQ0FBQztLQVkzQzs7OztJQVZDLDJDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEdBQUcsYUFBVyxJQUFJLENBQUMsS0FBTyxDQUFDO1FBQ3JELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsS0FBSyxTQUFTLEVBQUU7WUFDMUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEdBQUcsc0JBQXNCLENBQUM7U0FDckQ7S0FDRjs7Ozs7SUFDRCwyQ0FBVzs7OztJQUFYLFVBQVksRUFBZTtZQUFiLFlBQUcsRUFBRSxrQkFBTTtRQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsS0FBQSxFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUMsQ0FBQztLQUNwQzs7Z0JBNURGLFNBQVMs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