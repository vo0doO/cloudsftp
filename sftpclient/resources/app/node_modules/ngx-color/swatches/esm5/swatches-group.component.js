/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
var SwatchesGroupComponent = /** @class */ (function () {
    function SwatchesGroupComponent() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
    }
    SwatchesGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-swatches-group',
                    template: "\n  <div class=\"swatches-group\">\n    <color-swatches-color\n      *ngFor=\"let color of group; let idx = index;\"\n      [active]=\"color.toLowerCase() === active\"\n      [color]=\"color\"\n      [first]=\"idx === 0\"\n      [last]=\"idx === group.length - 1\"\n      (onClick)=\"onClick.emit($event)\"\n    >\n    </color-swatches-color>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n    .swatches-group {\n      padding-bottom: 10px;\n      width: 40px;\n      float: left;\n      margin-right: 10px;\n    }\n  "]
                }] }
    ];
    SwatchesGroupComponent.propDecorators = {
        group: [{ type: Input }],
        active: [{ type: Input }],
        onClick: [{ type: Output }],
        onSwatchHover: [{ type: Output }]
    };
    return SwatchesGroupComponent;
}());
export { SwatchesGroupComponent };
if (false) {
    /** @type {?} */
    SwatchesGroupComponent.prototype.group;
    /** @type {?} */
    SwatchesGroupComponent.prototype.active;
    /** @type {?} */
    SwatchesGroupComponent.prototype.onClick;
    /** @type {?} */
    SwatchesGroupComponent.prototype.onSwatchHover;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhdGNoZXMtZ3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWNvbG9yL3N3YXRjaGVzLyIsInNvdXJjZXMiOlsic3dhdGNoZXMtZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUV2QjtJQUFBO1FBK0JZLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ2xDLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUNwRCxDQUFDOztnQkFqQ0EsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRSxzV0FZVDtvQkFXRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsbUJBQW1CLEVBQUUsS0FBSzs2QkFWeEIsb0lBT0Q7aUJBSUY7Ozt3QkFFRSxLQUFLO3lCQUNMLEtBQUs7MEJBQ0wsTUFBTTtnQ0FDTixNQUFNOztJQUNULDZCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0FMWSxzQkFBc0I7OztJQUNqQyx1Q0FBeUI7O0lBQ3pCLHdDQUF3Qjs7SUFDeEIseUNBQTRDOztJQUM1QywrQ0FBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb2xvci1zd2F0Y2hlcy1ncm91cCcsXG4gIHRlbXBsYXRlOiBgXG4gIDxkaXYgY2xhc3M9XCJzd2F0Y2hlcy1ncm91cFwiPlxuICAgIDxjb2xvci1zd2F0Y2hlcy1jb2xvclxuICAgICAgKm5nRm9yPVwibGV0IGNvbG9yIG9mIGdyb3VwOyBsZXQgaWR4ID0gaW5kZXg7XCJcbiAgICAgIFthY3RpdmVdPVwiY29sb3IudG9Mb3dlckNhc2UoKSA9PT0gYWN0aXZlXCJcbiAgICAgIFtjb2xvcl09XCJjb2xvclwiXG4gICAgICBbZmlyc3RdPVwiaWR4ID09PSAwXCJcbiAgICAgIFtsYXN0XT1cImlkeCA9PT0gZ3JvdXAubGVuZ3RoIC0gMVwiXG4gICAgICAob25DbGljayk9XCJvbkNsaWNrLmVtaXQoJGV2ZW50KVwiXG4gICAgPlxuICAgIDwvY29sb3Itc3dhdGNoZXMtY29sb3I+XG4gIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtcbiAgICBgXG4gICAgLnN3YXRjaGVzLWdyb3VwIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB9XG4gIGAsXG4gIF0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgU3dhdGNoZXNHcm91cENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGdyb3VwOiBzdHJpbmdbXTtcbiAgQElucHV0KCkgYWN0aXZlOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBvbkNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKSBvblN3YXRjaEhvdmVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG59XG4iXX0=