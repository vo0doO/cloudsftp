/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import { getContrastingColor } from 'ngx-color';
var SwatchesColorComponent = /** @class */ (function () {
    function SwatchesColorComponent() {
        this.first = false;
        this.last = false;
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
        this.getContrastingColor = getContrastingColor;
        this.colorStyle = {
            width: '40px',
            height: '24px',
            cursor: 'pointer',
            marginBottom: '1px',
        };
        this.focusStyle = {};
    }
    /**
     * @return {?}
     */
    SwatchesColorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.colorStyle.background = this.color;
        this.focusStyle.boxShadow = "0 0 4px " + this.color;
        if (this.first) {
            this.colorStyle.borderRadius = '2px 2px 0 0';
        }
        if (this.last) {
            this.colorStyle.borderRadius = '0 0 2px 2px';
        }
        if (this.color === '#FFFFFF') {
            this.colorStyle.boxShadow = 'inset 0 0 0 1px #ddd';
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SwatchesColorComponent.prototype.handleClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.onClick.emit({
            data: {
                hex: this.color,
                source: 'hex',
            },
            $event: $event,
        });
    };
    SwatchesColorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-swatches-color',
                    template: "\n  <color-swatch [color]=\"color\" [style]=\"colorStyle\" [focusStyle]=\"focusStyle\"\n    [class.first]=\"first\" [class.last]=\"last\"\n    (click)=\"handleClick($event)\" (onHover)=\"onSwatchHover.emit($event)\">\n    <div class=\"swatch-check\" *ngIf=\"active\" [class.first]=\"first\" [class.last]=\"last\">\n      <svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\" [style.fill]=\"getContrastingColor(color)\">\n        <path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" />\n      </svg>\n    </div>\n  </color-swatch>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n    .swatches-group {\n      padding-bottom: 10px;\n      width: 40px;\n      float: left;\n      margin-right: 10px;\n    }\n    .swatch-check {\n      margin-left: 8px;\n    }\n  "]
                }] }
    ];
    SwatchesColorComponent.propDecorators = {
        color: [{ type: Input }],
        first: [{ type: Input }],
        last: [{ type: Input }],
        active: [{ type: Input }],
        onClick: [{ type: Output }],
        onSwatchHover: [{ type: Output }]
    };
    return SwatchesColorComponent;
}());
export { SwatchesColorComponent };
if (false) {
    /** @type {?} */
    SwatchesColorComponent.prototype.color;
    /** @type {?} */
    SwatchesColorComponent.prototype.first;
    /** @type {?} */
    SwatchesColorComponent.prototype.last;
    /** @type {?} */
    SwatchesColorComponent.prototype.active;
    /** @type {?} */
    SwatchesColorComponent.prototype.onClick;
    /** @type {?} */
    SwatchesColorComponent.prototype.onSwatchHover;
    /** @type {?} */
    SwatchesColorComponent.prototype.getContrastingColor;
    /** @type {?} */
    SwatchesColorComponent.prototype.colorStyle;
    /** @type {?} */
    SwatchesColorComponent.prototype.focusStyle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhdGNoZXMtY29sb3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWNvbG9yL3N3YXRjaGVzLyIsInNvdXJjZXMiOlsic3dhdGNoZXMtY29sb3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sR0FDUCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFaEQ7SUFBQTtRQStCVyxVQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ2QsU0FBSSxHQUFHLEtBQUssQ0FBQztRQUVaLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ2xDLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNsRCx3QkFBbUIsR0FBRyxtQkFBbUIsQ0FBQztRQUMxQyxlQUFVLEdBQThCO1lBQ3RDLEtBQUssRUFBRSxNQUFNO1lBQ2IsTUFBTSxFQUFFLE1BQU07WUFDZCxNQUFNLEVBQUUsU0FBUztZQUNqQixZQUFZLEVBQUUsS0FBSztTQUNwQixDQUFDO1FBQ0YsZUFBVSxHQUE4QixFQUFFLENBQUM7SUF3QjdDLENBQUM7Ozs7SUF0QkMseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN4QyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsR0FBRyxhQUFXLElBQUksQ0FBQyxLQUFPLENBQUM7UUFDcEQsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEdBQUcsYUFBYSxDQUFDO1NBQzlDO1FBQ0QsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEdBQUcsYUFBYSxDQUFDO1NBQzlDO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLFNBQVMsRUFBRTtZQUM1QixJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQztTQUNwRDtJQUNILENBQUM7Ozs7O0lBQ0QsNENBQVc7Ozs7SUFBWCxVQUFZLE1BQU07UUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7WUFDaEIsSUFBSSxFQUFFO2dCQUNKLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDZixNQUFNLEVBQUUsS0FBSzthQUNkO1lBQ0QsTUFBTSxRQUFBO1NBQ1AsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBbEVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxRQUFRLEVBQUUsZ2pCQVVUO29CQWNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxtQkFBbUIsRUFBRSxLQUFLOzZCQWJ4Qix5TEFVRDtpQkFJRjs7O3dCQUVFLEtBQUs7d0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3lCQUNMLEtBQUs7MEJBQ0wsTUFBTTtnQ0FDTixNQUFNOztJQWdDVCw2QkFBQztDQUFBLEFBbkVELElBbUVDO1NBdENZLHNCQUFzQjs7O0lBQ2pDLHVDQUF1Qjs7SUFDdkIsdUNBQXVCOztJQUN2QixzQ0FBc0I7O0lBQ3RCLHdDQUF5Qjs7SUFDekIseUNBQTRDOztJQUM1QywrQ0FBa0Q7O0lBQ2xELHFEQUEwQzs7SUFDMUMsNENBS0U7O0lBQ0YsNENBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBnZXRDb250cmFzdGluZ0NvbG9yIH0gZnJvbSAnbmd4LWNvbG9yJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sb3Itc3dhdGNoZXMtY29sb3InLFxuICB0ZW1wbGF0ZTogYFxuICA8Y29sb3Itc3dhdGNoIFtjb2xvcl09XCJjb2xvclwiIFtzdHlsZV09XCJjb2xvclN0eWxlXCIgW2ZvY3VzU3R5bGVdPVwiZm9jdXNTdHlsZVwiXG4gICAgW2NsYXNzLmZpcnN0XT1cImZpcnN0XCIgW2NsYXNzLmxhc3RdPVwibGFzdFwiXG4gICAgKGNsaWNrKT1cImhhbmRsZUNsaWNrKCRldmVudClcIiAob25Ib3Zlcik9XCJvblN3YXRjaEhvdmVyLmVtaXQoJGV2ZW50KVwiPlxuICAgIDxkaXYgY2xhc3M9XCJzd2F0Y2gtY2hlY2tcIiAqbmdJZj1cImFjdGl2ZVwiIFtjbGFzcy5maXJzdF09XCJmaXJzdFwiIFtjbGFzcy5sYXN0XT1cImxhc3RcIj5cbiAgICAgIDxzdmcgc3R5bGU9XCJ3aWR0aDogMjRweDsgaGVpZ2h0OiAyNHB4O1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBbc3R5bGUuZmlsbF09XCJnZXRDb250cmFzdGluZ0NvbG9yKGNvbG9yKVwiPlxuICAgICAgICA8cGF0aCBkPVwiTTIxLDdMOSwxOUwzLjUsMTMuNUw0LjkxLDEyLjA5TDksMTYuMTdMMTkuNTksNS41OUwyMSw3WlwiIC8+XG4gICAgICA8L3N2Zz5cbiAgICA8L2Rpdj5cbiAgPC9jb2xvci1zd2F0Y2g+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAuc3dhdGNoZXMtZ3JvdXAge1xuICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgICB3aWR0aDogNDBweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIH1cbiAgICAuc3dhdGNoLWNoZWNrIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gICAgfVxuICBgLFxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFN3YXRjaGVzQ29sb3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBjb2xvcjogc3RyaW5nO1xuICBASW5wdXQoKSBmaXJzdCA9IGZhbHNlO1xuICBASW5wdXQoKSBsYXN0ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGFjdGl2ZTogYm9vbGVhbjtcbiAgQE91dHB1dCgpIG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIG9uU3dhdGNoSG92ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgZ2V0Q29udHJhc3RpbmdDb2xvciA9IGdldENvbnRyYXN0aW5nQ29sb3I7XG4gIGNvbG9yU3R5bGU6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0gPSB7XG4gICAgd2lkdGg6ICc0MHB4JyxcbiAgICBoZWlnaHQ6ICcyNHB4JyxcbiAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICBtYXJnaW5Cb3R0b206ICcxcHgnLFxuICB9O1xuICBmb2N1c1N0eWxlOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge307XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5jb2xvclN0eWxlLmJhY2tncm91bmQgPSB0aGlzLmNvbG9yO1xuICAgIHRoaXMuZm9jdXNTdHlsZS5ib3hTaGFkb3cgPSBgMCAwIDRweCAke3RoaXMuY29sb3J9YDtcbiAgICBpZiAodGhpcy5maXJzdCkge1xuICAgICAgdGhpcy5jb2xvclN0eWxlLmJvcmRlclJhZGl1cyA9ICcycHggMnB4IDAgMCc7XG4gICAgfVxuICAgIGlmICh0aGlzLmxhc3QpIHtcbiAgICAgIHRoaXMuY29sb3JTdHlsZS5ib3JkZXJSYWRpdXMgPSAnMCAwIDJweCAycHgnO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb2xvciA9PT0gJyNGRkZGRkYnKSB7XG4gICAgICB0aGlzLmNvbG9yU3R5bGUuYm94U2hhZG93ID0gJ2luc2V0IDAgMCAwIDFweCAjZGRkJztcbiAgICB9XG4gIH1cbiAgaGFuZGxlQ2xpY2soJGV2ZW50KSB7XG4gICAgdGhpcy5vbkNsaWNrLmVtaXQoe1xuICAgICAgZGF0YToge1xuICAgICAgICBoZXg6IHRoaXMuY29sb3IsXG4gICAgICAgIHNvdXJjZTogJ2hleCcsXG4gICAgICB9LFxuICAgICAgJGV2ZW50LFxuICAgIH0pO1xuICB9XG59XG4iXX0=