/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { amber, blue, blueGrey, brown, cyan, deepOrange, deepPurple, green, indigo, lightBlue, lightGreen, lime, orange, pink, purple, red, teal, yellow, } from 'material-colors';
import { ColorWrap, RaisedModule, SwatchModule } from 'ngx-color';
import { SwatchesColorComponent } from './swatches-color.component';
import { SwatchesGroupComponent } from './swatches-group.component';
var SwatchesComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SwatchesComponent, _super);
    function SwatchesComponent() {
        var _this = _super.call(this) || this;
        /**
         * Pixel value for picker width
         */
        _this.width = 320;
        /**
         * Color squares to display
         */
        _this.height = 240;
        /**
         * An array of color groups, each with an array of colors
         */
        _this.colors = [
            [
                red['900'],
                red['700'],
                red['500'],
                red['300'],
                red['100'],
            ],
            [
                pink['900'],
                pink['700'],
                pink['500'],
                pink['300'],
                pink['100'],
            ],
            [
                purple['900'],
                purple['700'],
                purple['500'],
                purple['300'],
                purple['100'],
            ],
            [
                deepPurple['900'],
                deepPurple['700'],
                deepPurple['500'],
                deepPurple['300'],
                deepPurple['100'],
            ],
            [
                indigo['900'],
                indigo['700'],
                indigo['500'],
                indigo['300'],
                indigo['100'],
            ],
            [
                blue['900'],
                blue['700'],
                blue['500'],
                blue['300'],
                blue['100'],
            ],
            [
                lightBlue['900'],
                lightBlue['700'],
                lightBlue['500'],
                lightBlue['300'],
                lightBlue['100'],
            ],
            [
                cyan['900'],
                cyan['700'],
                cyan['500'],
                cyan['300'],
                cyan['100'],
            ],
            [
                teal['900'],
                teal['700'],
                teal['500'],
                teal['300'],
                teal['100'],
            ],
            [
                '#194D33',
                green['700'],
                green['500'],
                green['300'],
                green['100'],
            ],
            [
                lightGreen['900'],
                lightGreen['700'],
                lightGreen['500'],
                lightGreen['300'],
                lightGreen['100'],
            ],
            [
                lime['900'],
                lime['700'],
                lime['500'],
                lime['300'],
                lime['100'],
            ],
            [
                yellow['900'],
                yellow['700'],
                yellow['500'],
                yellow['300'],
                yellow['100'],
            ],
            [
                amber['900'],
                amber['700'],
                amber['500'],
                amber['300'],
                amber['100'],
            ],
            [
                orange['900'],
                orange['700'],
                orange['500'],
                orange['300'],
                orange['100'],
            ],
            [
                deepOrange['900'],
                deepOrange['700'],
                deepOrange['500'],
                deepOrange['300'],
                deepOrange['100'],
            ],
            [
                brown['900'],
                brown['700'],
                brown['500'],
                brown['300'],
                brown['100'],
            ],
            [
                blueGrey['900'],
                blueGrey['700'],
                blueGrey['500'],
                blueGrey['300'],
                blueGrey['100'],
            ],
            ['#000000', '#525252', '#969696', '#D9D9D9', '#FFFFFF'],
        ];
        return _this;
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    SwatchesComponent.prototype.handlePickerChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    SwatchesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'color-swatches',
                    template: "\n  <div class=\"swatches-picker {{ className }}\"\n    [style.width.px]=\"width\" [style.height.px]=\"height\">\n    <color-raised>\n      <div class=\"swatches-overflow\" [style.height.px]=\"height\">\n        <div class=\"swatches-body\">\n          <color-swatches-group\n            *ngFor=\"let group of colors\"\n            [group]=\"group\" [active]=\"hex\"\n            (onClick)=\"handlePickerChange($event)\"\n          ></color-swatches-group>\n        </div>\n      </div>\n    </color-raised>\n  </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    styles: ["\n      .swatches-overflow {\n        overflow-y: scroll;\n      }\n      .swatches-overflow {\n        padding: 16px 0 6px 16px;\n      }\n    "]
                }] }
    ];
    /** @nocollapse */
    SwatchesComponent.ctorParameters = function () { return []; };
    SwatchesComponent.propDecorators = {
        width: [{ type: Input }],
        height: [{ type: Input }],
        colors: [{ type: Input }]
    };
    return SwatchesComponent;
}(ColorWrap));
export { SwatchesComponent };
if (false) {
    /**
     * Pixel value for picker width
     * @type {?}
     */
    SwatchesComponent.prototype.width;
    /**
     * Color squares to display
     * @type {?}
     */
    SwatchesComponent.prototype.height;
    /**
     * An array of color groups, each with an array of colors
     * @type {?}
     */
    SwatchesComponent.prototype.colors;
}
var ColorSwatchesModule = /** @class */ (function () {
    function ColorSwatchesModule() {
    }
    ColorSwatchesModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        SwatchesComponent,
                        SwatchesGroupComponent,
                        SwatchesColorComponent,
                    ],
                    exports: [SwatchesComponent, SwatchesGroupComponent, SwatchesColorComponent],
                    imports: [CommonModule, SwatchModule, RaisedModule],
                },] }
    ];
    return ColorSwatchesModule;
}());
export { ColorSwatchesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhdGNoZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWNvbG9yL3N3YXRjaGVzLyIsInNvdXJjZXMiOlsic3dhdGNoZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULEtBQUssRUFDTCxRQUFRLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNMLEtBQUssRUFDTCxJQUFJLEVBQ0osUUFBUSxFQUNSLEtBQUssRUFDTCxJQUFJLEVBQ0osVUFBVSxFQUNWLFVBQVUsRUFDVixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsSUFBSSxFQUNKLE1BQU0sRUFDTixJQUFJLEVBQ0osTUFBTSxFQUNOLEdBQUcsRUFDSCxJQUFJLEVBQ0osTUFBTSxHQUNQLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXBFO0lBK0J1Qyw2Q0FBUztJQXdJOUM7UUFBQSxZQUNFLGlCQUFPLFNBQ1I7Ozs7UUF4SVEsV0FBSyxHQUFvQixHQUFHLENBQUM7Ozs7UUFFN0IsWUFBTSxHQUFvQixHQUFHLENBQUM7Ozs7UUFHdkMsWUFBTSxHQUFlO1lBQ25CO2dCQUNFLEdBQUcsQ0FBQyxLQUFLLENBQUM7Z0JBQ1YsR0FBRyxDQUFDLEtBQUssQ0FBQztnQkFDVixHQUFHLENBQUMsS0FBSyxDQUFDO2dCQUNWLEdBQUcsQ0FBQyxLQUFLLENBQUM7Z0JBQ1YsR0FBRyxDQUFDLEtBQUssQ0FBQzthQUNYO1lBQ0Q7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S0FBSzs2QkFWeEIsa0pBT0M7aUJBSUo7Ozs7O3dCQUdFLEtBQUs7eUJBRUwsS0FBSzt5QkFFTCxLQUFLOztJQXdJUix3QkFBQztDQUFBLEFBN0tELENBK0J1QyxTQUFTLEdBOEkvQztTQTlJWSxpQkFBaUI7Ozs7OztJQUU1QixrQ0FBc0M7Ozs7O0lBRXRDLG1DQUF1Qzs7Ozs7SUFFdkMsbUNBaUlFOztBQVNKO0lBQUE7SUFTa0MsQ0FBQzs7Z0JBVGxDLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osaUJBQWlCO3dCQUNqQixzQkFBc0I7d0JBQ3RCLHNCQUFzQjtxQkFDdkI7b0JBQ0QsT0FBTyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsc0JBQXNCLEVBQUUsc0JBQXNCLENBQUM7b0JBQzVFLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDO2lCQUNwRDs7SUFDaUMsMEJBQUM7Q0FBQSxBQVRuQyxJQVNtQztTQUF0QixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIE5nTW9kdWxlLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIGFtYmVyLFxuICBibHVlLFxuICBibHVlR3JleSxcbiAgYnJvd24sXG4gIGN5YW4sXG4gIGRlZXBPcmFuZ2UsXG4gIGRlZXBQdXJwbGUsXG4gIGdyZWVuLFxuICBpbmRpZ28sXG4gIGxpZ2h0Qmx1ZSxcbiAgbGlnaHRHcmVlbixcbiAgbGltZSxcbiAgb3JhbmdlLFxuICBwaW5rLFxuICBwdXJwbGUsXG4gIHJlZCxcbiAgdGVhbCxcbiAgeWVsbG93LFxufSBmcm9tICdtYXRlcmlhbC1jb2xvcnMnO1xuXG5pbXBvcnQgeyBDb2xvcldyYXAsIFJhaXNlZE1vZHVsZSwgU3dhdGNoTW9kdWxlIH0gZnJvbSAnbmd4LWNvbG9yJztcbmltcG9ydCB7IFN3YXRjaGVzQ29sb3JDb21wb25lbnQgfSBmcm9tICcuL3N3YXRjaGVzLWNvbG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTd2F0Y2hlc0dyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9zd2F0Y2hlcy1ncm91cC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb2xvci1zd2F0Y2hlcycsXG4gIHRlbXBsYXRlOiBgXG4gIDxkaXYgY2xhc3M9XCJzd2F0Y2hlcy1waWNrZXIge3sgY2xhc3NOYW1lIH19XCJcbiAgICBbc3R5bGUud2lkdGgucHhdPVwid2lkdGhcIiBbc3R5bGUuaGVpZ2h0LnB4XT1cImhlaWdodFwiPlxuICAgIDxjb2xvci1yYWlzZWQ+XG4gICAgICA8ZGl2IGNsYXNzPVwic3dhdGNoZXMtb3ZlcmZsb3dcIiBbc3R5bGUuaGVpZ2h0LnB4XT1cImhlaWdodFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwic3dhdGNoZXMtYm9keVwiPlxuICAgICAgICAgIDxjb2xvci1zd2F0Y2hlcy1ncm91cFxuICAgICAgICAgICAgKm5nRm9yPVwibGV0IGdyb3VwIG9mIGNvbG9yc1wiXG4gICAgICAgICAgICBbZ3JvdXBdPVwiZ3JvdXBcIiBbYWN0aXZlXT1cImhleFwiXG4gICAgICAgICAgICAob25DbGljayk9XCJoYW5kbGVQaWNrZXJDaGFuZ2UoJGV2ZW50KVwiXG4gICAgICAgICAgPjwvY29sb3Itc3dhdGNoZXMtZ3JvdXA+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9jb2xvci1yYWlzZWQ+XG4gIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtcbiAgICBgXG4gICAgICAuc3dhdGNoZXMtb3ZlcmZsb3cge1xuICAgICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgICB9XG4gICAgICAuc3dhdGNoZXMtb3ZlcmZsb3cge1xuICAgICAgICBwYWRkaW5nOiAxNnB4IDAgNnB4IDE2cHg7XG4gICAgICB9XG4gICAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBTd2F0Y2hlc0NvbXBvbmVudCBleHRlbmRzIENvbG9yV3JhcCB7XG4gIC8qKiBQaXhlbCB2YWx1ZSBmb3IgcGlja2VyIHdpZHRoICovXG4gIEBJbnB1dCgpIHdpZHRoOiBzdHJpbmcgfCBudW1iZXIgPSAzMjA7XG4gIC8qKiBDb2xvciBzcXVhcmVzIHRvIGRpc3BsYXkgKi9cbiAgQElucHV0KCkgaGVpZ2h0OiBzdHJpbmcgfCBudW1iZXIgPSAyNDA7XG4gIC8qKiBBbiBhcnJheSBvZiBjb2xvciBncm91cHMsIGVhY2ggd2l0aCBhbiBhcnJheSBvZiBjb2xvcnMgKi9cbiAgQElucHV0KClcbiAgY29sb3JzOiBzdHJpbmdbXVtdID0gW1xuICAgIFtcbiAgICAgIHJlZFsnOTAwJ10sXG4gICAgICByZWRbJzcwMCddLFxuICAgICAgcmVkWyc1MDAnXSxcbiAgICAgIHJlZFsnMzAwJ10sXG4gICAgICByZWRbJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgcGlua1snOTAwJ10sXG4gICAgICBwaW5rWyc3MDAnXSxcbiAgICAgIHBpbmtbJzUwMCddLFxuICAgICAgcGlua1snMzAwJ10sXG4gICAgICBwaW5rWycxMDAnXSxcbiAgICBdLFxuICAgIFtcbiAgICAgIHB1cnBsZVsnOTAwJ10sXG4gICAgICBwdXJwbGVbJzcwMCddLFxuICAgICAgcHVycGxlWyc1MDAnXSxcbiAgICAgIHB1cnBsZVsnMzAwJ10sXG4gICAgICBwdXJwbGVbJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgZGVlcFB1cnBsZVsnOTAwJ10sXG4gICAgICBkZWVwUHVycGxlWyc3MDAnXSxcbiAgICAgIGRlZXBQdXJwbGVbJzUwMCddLFxuICAgICAgZGVlcFB1cnBsZVsnMzAwJ10sXG4gICAgICBkZWVwUHVycGxlWycxMDAnXSxcbiAgICBdLFxuICAgIFtcbiAgICAgIGluZGlnb1snOTAwJ10sXG4gICAgICBpbmRpZ29bJzcwMCddLFxuICAgICAgaW5kaWdvWyc1MDAnXSxcbiAgICAgIGluZGlnb1snMzAwJ10sXG4gICAgICBpbmRpZ29bJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgYmx1ZVsnOTAwJ10sXG4gICAgICBibHVlWyc3MDAnXSxcbiAgICAgIGJsdWVbJzUwMCddLFxuICAgICAgYmx1ZVsnMzAwJ10sXG4gICAgICBibHVlWycxMDAnXSxcbiAgICBdLFxuICAgIFtcbiAgICAgIGxpZ2h0Qmx1ZVsnOTAwJ10sXG4gICAgICBsaWdodEJsdWVbJzcwMCddLFxuICAgICAgbGlnaHRCbHVlWyc1MDAnXSxcbiAgICAgIGxpZ2h0Qmx1ZVsnMzAwJ10sXG4gICAgICBsaWdodEJsdWVbJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgY3lhblsnOTAwJ10sXG4gICAgICBjeWFuWyc3MDAnXSxcbiAgICAgIGN5YW5bJzUwMCddLFxuICAgICAgY3lhblsnMzAwJ10sXG4gICAgICBjeWFuWycxMDAnXSxcbiAgICBdLFxuICAgIFtcbiAgICAgIHRlYWxbJzkwMCddLFxuICAgICAgdGVhbFsnNzAwJ10sXG4gICAgICB0ZWFsWyc1MDAnXSxcbiAgICAgIHRlYWxbJzMwMCddLFxuICAgICAgdGVhbFsnMTAwJ10sXG4gICAgXSxcbiAgICBbXG4gICAgICAnIzE5NEQzMycsXG4gICAgICBncmVlblsnNzAwJ10sXG4gICAgICBncmVlblsnNTAwJ10sXG4gICAgICBncmVlblsnMzAwJ10sXG4gICAgICBncmVlblsnMTAwJ10sXG4gICAgXSxcbiAgICBbXG4gICAgICBsaWdodEdyZWVuWyc5MDAnXSxcbiAgICAgIGxpZ2h0R3JlZW5bJzcwMCddLFxuICAgICAgbGlnaHRHcmVlblsnNTAwJ10sXG4gICAgICBsaWdodEdyZWVuWyczMDAnXSxcbiAgICAgIGxpZ2h0R3JlZW5bJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgbGltZVsnOTAwJ10sXG4gICAgICBsaW1lWyc3MDAnXSxcbiAgICAgIGxpbWVbJzUwMCddLFxuICAgICAgbGltZVsnMzAwJ10sXG4gICAgICBsaW1lWycxMDAnXSxcbiAgICBdLFxuICAgIFtcbiAgICAgIHllbGxvd1snOTAwJ10sXG4gICAgICB5ZWxsb3dbJzcwMCddLFxuICAgICAgeWVsbG93Wyc1MDAnXSxcbiAgICAgIHllbGxvd1snMzAwJ10sXG4gICAgICB5ZWxsb3dbJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgYW1iZXJbJzkwMCddLFxuICAgICAgYW1iZXJbJzcwMCddLFxuICAgICAgYW1iZXJbJzUwMCddLFxuICAgICAgYW1iZXJbJzMwMCddLFxuICAgICAgYW1iZXJbJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgb3JhbmdlWyc5MDAnXSxcbiAgICAgIG9yYW5nZVsnNzAwJ10sXG4gICAgICBvcmFuZ2VbJzUwMCddLFxuICAgICAgb3JhbmdlWyczMDAnXSxcbiAgICAgIG9yYW5nZVsnMTAwJ10sXG4gICAgXSxcbiAgICBbXG4gICAgICBkZWVwT3JhbmdlWyc5MDAnXSxcbiAgICAgIGRlZXBPcmFuZ2VbJzcwMCddLFxuICAgICAgZGVlcE9yYW5nZVsnNTAwJ10sXG4gICAgICBkZWVwT3JhbmdlWyczMDAnXSxcbiAgICAgIGRlZXBPcmFuZ2VbJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgYnJvd25bJzkwMCddLFxuICAgICAgYnJvd25bJzcwMCddLFxuICAgICAgYnJvd25bJzUwMCddLFxuICAgICAgYnJvd25bJzMwMCddLFxuICAgICAgYnJvd25bJzEwMCddLFxuICAgIF0sXG4gICAgW1xuICAgICAgYmx1ZUdyZXlbJzkwMCddLFxuICAgICAgYmx1ZUdyZXlbJzcwMCddLFxuICAgICAgYmx1ZUdyZXlbJzUwMCddLFxuICAgICAgYmx1ZUdyZXlbJzMwMCddLFxuICAgICAgYmx1ZUdyZXlbJzEwMCddLFxuICAgIF0sXG4gICAgWycjMDAwMDAwJywgJyM1MjUyNTInLCAnIzk2OTY5NicsICcjRDlEOUQ5JywgJyNGRkZGRkYnXSxcbiAgXTtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuICBoYW5kbGVQaWNrZXJDaGFuZ2UoeyBkYXRhLCAkZXZlbnQgfSkge1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlKGRhdGEsICRldmVudCk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU3dhdGNoZXNDb21wb25lbnQsXG4gICAgU3dhdGNoZXNHcm91cENvbXBvbmVudCxcbiAgICBTd2F0Y2hlc0NvbG9yQ29tcG9uZW50LFxuICBdLFxuICBleHBvcnRzOiBbU3dhdGNoZXNDb21wb25lbnQsIFN3YXRjaGVzR3JvdXBDb21wb25lbnQsIFN3YXRjaGVzQ29sb3JDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBTd2F0Y2hNb2R1bGUsIFJhaXNlZE1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbG9yU3dhdGNoZXNNb2R1bGUge31cbiJdfQ==